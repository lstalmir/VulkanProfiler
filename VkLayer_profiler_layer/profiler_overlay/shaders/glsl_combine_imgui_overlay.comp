// Copyright (c) 2025 Lukasz Stalmirski
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#version 450

layout( local_size_x = 8, local_size_y = 8, local_size_z = 1 ) in;

layout( set = 0, binding = 0, rgba8 ) uniform readonly image2D GUIImage;
layout( set = 0, binding = 1, rgba8 ) uniform image2D OutputImage;

layout( push_constant ) uniform constants
{
    uvec2 ImageSize;
} pc;

void main()
{
    const ivec2 position = ivec2( gl_GlobalInvocationID.xy );
    if( position.x < pc.ImageSize.x && position.y < pc.ImageSize.y )
    {
        vec4 color = imageLoad( OutputImage, position );
        vec4 gui = imageLoad( GUIImage, position );
        imageStore( OutputImage, position, vec4( mix( color.rgb, gui.rgb, gui.a ), 1 ) );
    }
}
