{
    "file_format_version": "1.2.0",
    "layer": {
        "name": "@PROFILER_LAYER_NAME@",
        "type": "GLOBAL",
        "library_path": "@THIS_DIR@$<TARGET_FILE_NAME:@PROFILER_LAYER_PROJECTNAME@>",
        "api_version": "@PROFILER_LAYER_API_VERSION@",
        "implementation_version": "@PROFILER_LAYER_VER_BUILD@",
        "description": "@PROFILER_LAYER_FILEDESCRIPTION@",
        "platforms": [ "WINDOWS", "LINUX" ],
        "instance_extensions": [
            {
                "name": "VK_EXT_debug_utils",
                "spec_version": "2",
                "entrypoints": [
                    "vkCmdBeginDebugUtilsLabelEXT",
                    "vkCmdEndDebugUtilsLabelEXT",
                    "vkCmdInsertDebugUtilsLabelEXT",
                    "vkSetDebugUtilsObjectNameEXT",
                    "vkSetDebugUtilsObjectTagEXT"
                ]
            }
        ],
        "device_extensions": [
            {
                "name": "VK_EXT_profiler",
                "spec_version": "3",
                "entrypoints": [
                    "vkSetProfilerModeEXT",
                    "vkGetProfilerModeEXT",
                    "vkSetProfilerSyncModeEXT",
                    "vkGetProfilerSyncModeEXT",
                    "vkGetProfilerFrameDataEXT",
                    "vkFreeProfilerFrameDataEXT",
                    "vkFlushProfilerEXT",
                    "vkEnumerateProfilerPerformanceMetricsSetsEXT",
                    "vkEnumerateProfilerPerformanceCounterPropertiesEXT",
                    "vkSetProfilerPerformanceMetricsSetEXT",
                    "vkGetProfilerActivePerformanceMetricsSetIndexEXT"
                ]
            },
            {
                "name": "VK_EXT_debug_marker",
                "spec_version": "4",
                "entrypoints": [
                    "vkCmdDebugMarkerBeginEXT",
                    "vkCmdDebugMarkerEndEXT",
                    "vkCmdDebugMarkerInsertEXT",
                    "vkDebugMarkerSetObjectNameEXT",
                    "vkDebugMarkerSetObjectTagEXT"
                ]
            }
        ],
        "features": {
            "settings": [
                {
                    "key": "enable_overlay",
                    "label": "Enable overlay",
                    "description": "Show an interactive overlay window with data on top of the profiled application.",
                    "env": "VKPROF_enable_overlay",
                    "type": "BOOL",
                    "default": true
                },
                {
                    "key": "enable_performance_query_ext",
                    "label": "Enable performance query extensions",
                    "description": "Enable vendor-specific extensions for collection of additional performance data.",
                    "env": "VKPROF_enable_performance_query_ext",
                    "type": "BOOL",
                    "default": true
                },
                {
                    "key": "enable_render_pass_begin_end_profiling",
                    "label": "Enable VkRenderPass begin and end profiling",
                    "description": "Insert timestamp queries before and after vkCmdBeginRenderPass and vkCmdEndRenderPass when sampling mode is at most per render pass.",
                    "env": "VKPROF_enable_render_pass_begin_end_profiling",
                    "type": "BOOL",
                    "default": false
                },
                {
                    "key": "set_stable_power_state",
                    "label": "Set stable power state",
                    "description": "Use DirectX12 API to set stable power state for GPU time measurements.",
                    "env": "VKPROF_set_stable_power_state",
                    "platforms": [ "WINDOWS" ],
                    "type": "BOOL",
                    "default": true
                },
                {
                    "key": "sampling_mode",
                    "label": "Sampling mode",
                    "description": "Level of timestamp data collection.",
                    "env": "VKPROF_sampling_mode",
                    "type": "ENUM",
                    "default": "drawcall",
                    "flags": [
                        {
                            "key": "drawcall",
                            "label": "Per Drawcall",
                            "description": "Instrument each draw command separately (highest overhead)."
                        },
                        {
                            "key": "pipeline",
                            "label": "Per VkPipeline",
                            "description": "Instrument each VkPipeline object change."
                        },
                        {
                            "key": "renderpass",
                            "label": "Per VkRenderPass",
                            "description": "Instrument each VkRenderPass object change."
                        },
                        {
                            "key": "commandbuffer",
                            "label": "Per VkCommandBuffer",
                            "description": "Instrument each VkCommandBuffer object change (lowest overhead)."
                        }
                    ]
                },
                {
                    "key": "sync_mode",
                    "label": "Synchronization mode",
                    "description": "Frequency of data collection.",
                    "env": "VKPROF_sync_mode",
                    "type": "ENUM",
                    "default": "present",
                    "flags": [
                        {
                            "key": "present",
                            "label": "On Present",
                            "description": "Synchronize and collect data on each present (lower overhead)."
                        },
                        {
                            "key": "submit",
                            "label": "On Submit",
                            "description": "Synchronize and collect data on each submit (higher overhead)."
                        }
                    ]
                }
            ]
        }
    }
}
